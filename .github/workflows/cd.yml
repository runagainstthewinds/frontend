name: Deploy to PRD
on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm install --ignore-scripts
      # Add run test step here in the future
      - name: Build Application
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  terraform-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
          
      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
      
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      # Terraform Init
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
      
      # Terraform Plan
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan
      
      # Terraform Apply
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve
      
      # Deploy to S3
      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://studytgt-s3-cdn-live --delete
      
      # Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"